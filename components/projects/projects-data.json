[
  {
    "title": "LoraWan Health Overview",
    "mainPictures": [
      {
        "path": "/images/projects/lorawanHealthOverview/architecture_1.png",
        "alt": "Lorawan Wristwatches architecture"
      },
      {
        "path": "/images/projects/lorawanHealthOverview/watch_pcb_1.png",
        "alt": "Wristwatch PCB"
      },
      {
        "path": "/images/projects/lorawanHealthOverview/app_1.png",
        "alt": "Mobile App"
      }
    ],
    "shortSummary": "Fullstack IoT system to gather data from the wearer of our LoraWan enabled custom wristwaches. Containerized backend and Flutter mobile app",
    "summary": "<p> This project is the continuation with a total revamp of the <a href='https://github.com/pseudoincorrect/Health_overview'> wristwatch monitoring system</a>. </p> <p>The overall goal being to <b>monitor the health status of hundreds of persons</b> at a time within a perimeter of few hundreds of meters. The<b> typical scenario is for outdoor groups</b>, possibly elderly persons in retirement houses, outdoor workers under a tough weather, health-fragile children in schools, etc...</p> <p>This system uses a <b>wristwatch with wireless capabilities</b> (LoraWan) and various sensors (heart-rate, temperature, acceleration) to extract the crucial data before sending it to our cloud application for analytics and decision making.</p> <p>The \"decision\" being taken is only here to <b>help health professionals</b>. For example issuing a warning to the physician connected to our app, signaling that one of the wristwatch wearer may require further examination, based on alarming heart-rate, temperature, fall detection or dehydration level.</p> <p> Key points: </p> <ul> <li> PCB made with Altium Designer, Multi-PCB with Flex connectors </li> <li> Embedded system based on a STM32 chip </li> <li>  Dockerized LoraWan backend based on <a href='https://www.chirpstack.io'> Chirpstack </a> <li> Dockerized application backend with ExpressJs and postgreSQL </li> <li> Mobile app with Flutter for data visualization and notifications </li> </ul>",
    "details": "<p> With the use of the LoraWan protocol/devices, we can now received data within a kilometer range, still at a low frequency/bandwidth, hence a mandatory processing is made on the wristwatches. The system is now simpler to deploy with only one or few LoraWan gateways, rather than tens of mesh relays and gateway.<p> For the <b> wristwatch and its PCB</b>, we developed a custom system made of several stacked PCBs connected with our own flex connectors. The case/garment that will host this system is developed by a third party company, whom we are in close collaboration.</p>  <p> The <b> Firmware </b> of the STM32 chip within the PCB is written in C and is responsible for controlling the LoraWan chip (also from STM) and sampling the sensors. The heart-rate sensor is an entire system by itself with and IC responsible for the data sampling and processing, with extraction of the features. Battery management/protection are also a part that we designed with a lot of care.</p> <p> The <b> Mobile App </b> has been written with the Flutter SDK. It is used to log the user in, fetch health data online and send/receive notifications.</p> <p> The <b> LoraWan Dockerized Backend </b> is using the Chirpstack project, which allows us to deploy our own LoraWan network and application servers. By using our own network server we are able to manage a higher throughput for the system as well as a fine grained control on the application.</p> <p> <b> Our  Dockerized Backend application </b> is there to manage the user, the access to the health data, the notification system, and so one. Its most notable components are ExpressJS, PostreSQL, SocketIO. </p>",
    "detailsPictures": [
      {
        "path": "/images/projects/lorawanHealthOverview/app_2.png",
        "alt": "Mobile App graphs"
      },
      {
        "path": "/images/projects/lorawanHealthOverview/watch_pcb_2.png",
        "alt": "Rigid Flex PCB"
      },
      {
        "path": "/images/projects/lorawanHealthOverview/app_3.png",
        "alt": "Mobile App graph"
      },
      {
        "path": "/images/projects/lorawanHealthOverview/architecture_2.png",
        "alt": "Cloud Architecture"
      }
    ],
    "tags": "LoraWan, Full-Stack App, C prog., Flutter, NodeJs, PCB design, AWS",
    "location": "HBKU, Doha, Qatar",
    "date": "2019 - Now"
  },
  {
    "title": "Wootch",
    "mainPictures": [
      { "path": "/images/projects/wootch/start.jpg", "alt": "Embedded UI" },
      {
        "path": "/images/projects/wootch/wootch_open_all.jpg",
        "alt": "Unfolded PCB Wootch"
      }
    ],
    "shortSummary": "Fullstack Iot Device to monitor your door movement and keep you safe. Small wifi enabled device with display, backend and CLI for managing devices.",
    "summary": "<p> Wootch is an IoT device to <b> monitor a door or any object activity </b> and detect whether it is being moved. It then sends notifications to your registered device (phone or other) in case any activity is happening. Its intuitive Embedded UI helps you to set your level of guard ! (It can vibrate as soon as its door/object get touched, send you a message or let you live your life). It is <b> connected to a cloud application </b> to make sense of the sensors' data. </p> <p> This one is <b> personal project </b> where I can  experiment with technologies new to me. Namely, Embedded UI (LVGL), Wifi enable MCU (ESP32) and Serverless Application (Serverless Framework). </p> <p> Key points: </p> <ul> <li> PCB Design integrating esp32 and LCD </li> <li> Embedded UI (LVGL) with touch control </li>  <li> Serverless infrastructure on AWS Cloud</li>  <li> AWS-IoT core with MQTT </li> </ul> <p> Project on <a href='https://github.com/pseudoincorrect/Wootch'> Github</a> </p> ",
    "details": " <p> Wootch's PCB has been made on Altium Designer. it features: </p> <ul> <li> Battery management, protection and regulators (buck) </li> <li> Inertial Measurement Unit (IMU, accelero + gyro) </li> <li> FPC connector for 3.5 inches LCD (480*320px) touch capacitive </li> <li> Wifi enable MCU (esp32) </li> <li> Vibration motor and controller IC </li> <li> Speaker amplifier </li> <li> USB C charging </li> <li> Push buttons and RGB LED </li> <li> Programer/debugger </li> </ul> <p> The code is written in C (not C++) along the <b> ESP-IDF SDK </b>. its main component are the following: </p> <ul> <li> ESP-IDF SDK, peripheral, wifi, RTOS. </li> <li> LvGL graphical library, to easily create responsive UI and provide support for the touch sensitive screen. </li> <li> esp_mpu60x0_C, MPU6050 IC from Invensense driver in C. </li> <li> ESP-AWS-IOT to interface with the AWS IoT-core service and provide a light-weight, fast and secured with AWS servers. It leverages the MQTT protocol with asymmetric key exchange, symetric encryption. </li> </ul> <p> The Backend will use the <b>serverless framework</b>: </p> <ul> <li> Receive MQTT messages, </li> <li> Extract data and store them in a dynamoDB Database </li> <li> Run analytics on the stored data </li> <li> Manage users </li> <li> Manage IoT \"things\" and secure their data link </li> </ul> ",
    "detailsPictures": [
      { "path": "/images/projects/wootch/altium.png", "alt": "Altium" },
      {
        "path": "/images/projects/wootch/on_wootch.jpg",
        "alt": "Embedded UI on watch"
      },
      {
        "path": "/images/projects/wootch/wootch_hardware.jpg",
        "alt": "Altium PCB preview"
      },
      {
        "path": "/images/projects/wootch/wootch_on.jpg",
        "alt": "Embedded UI on watch"
      },
      { "path": "/images/projects/wootch/serverless.png", "alt": "Serverless" }
    ],
    "tags": "Wi-Fi, PCB Design, Serverless AWS, C prog, Flutter, Full-Stack",
    "location": "HBKU, Doha, Qatar",
    "date": "2021"
  },
  {
    "title": "Smart Mask with App",
    "mainPictures": [
      {
        "path": "/images/projects/smartMask/mask_pcb_sensor.jpg",
        "alt": "Smart mask PCB"
      },
      {
        "path": "/images/projects/smartMask/app_analytics.png",
        "alt": "Mobile App analytics"
      }
    ],
    "shortSummary": "Bluetooth enabled mask with a Flutter mobile app to utilize and demonstrate the printed sensor of our research team. With signal processing/analysis.",
    "summary": "<p>This Smart mask is a system aiming to <b> gather, filter and analyze sensor data placed on a surgical mask </b>. The goal is to offer a <b> generic platform </b> for our Sensor Research team to showcase their <b> custom printed sensors </b> and enable them to acquire data and work it with an intuitive UI and bluetooth connection. The embbeded system is to be detachable to allow for the user to easy swap the mask with printed sensors in it. The application enable to store, <b> filter and navigate through the sensor data </b> contained in local Database. </p> <p> Key points: </p> <ul> <li> A Printed Circuit Board (PCB) for the embedded system, made with Altium Designer </li> <li> An embedded system firmware, written in C (Nordic SDK) </li> <li> A Flutter mobile application, for Bluetooth connection, data storage and presentation </li> </ul> <p> Project on <a href=\"https://github.com/pseudoincorrect/smart_mask\"> Github</a> </p>",
    "details": "<p> This project start when our Sensor research team needed a way to <b> test their sensors in real life case scenario and showcase them </b> for the multiple event that HBKU hosted. </p> <p> One objective was to make this project <b>adaptable for various product situation</b> (smart mask, clothes, appliances, etc...), the printed sensors being the main varying element. We therefore opted for a Bluetooth enabled platform to be connected to a mobile application. </p> <p> The circuit itself possess a Bluetooth device from Nordic acting as the main computing and communicating component. USB-C, power supplies, battery management/protection, LEDs, RC filters, <b> flat connectectors for the printed sensor </b> are all the peripheral we needed to make this system works. </p> <p> It connects to the mobile app through a bluetooth link which enable us to sample the sensor and control the embedded system (sample rate, gain, etc...). The mobile application manages the Bluetooth connection and the sensor data storage in a local databse. Finally, a large part of the application consits on an <b> offline tool for navigating and filtering the data </b> (analytics). </p>",
    "detailsPictures": [
      {
        "path": "/images/projects/smartMask/app_graphs.png",
        "alt": "Mobile app graph smart mask"
      },
      {
        "path": "/images/projects/smartMask/mask_pcb.jpg",
        "alt": "Smart PCB attached to mask"
      },
      {
        "path": "/images/projects/smartMask/SES.jpg",
        "alt": "Embedded Device IDE"
      },
      {
        "path": "/images/projects/smartMask/smart_mask_altium.png",
        "alt": "Altium preview PCB smart mask"
      }
    ],
    "tags": "Bluetooth, Flutter, PCB Design, Flexible Sensors",
    "location": "HBKU, Doha, Qatar",
    "date": "2020"
  },
  {
    "title": "Algorithms & Architecture",
    "mainPictures": [
      {
        "path": "/images/projects/algorithms/algorithm.png",
        "alt": "Path finding Algorith codewars"
      }
    ],
    "shortSummary": "Hundred of solved Algorithms on Codewars to improve my coding skills especially around algorithms, data structures and design patterns.",
    "summary": "This one is not a project as such. Rather, it is a quest to improve my skills in coding. Coming from embedded System I was confortable with electronic, DSP and low level programing. However when entering in the realm of cloud computing I felt that I had to learn more about Algorithm, design pattern and software architecture. This is why I started (and finished) plenty online programming courses (mainly on  <a href='https://www.udemy.com' > Udemy</a> ) and lots of books. To test and learn by doing, I spent quite some time solving programming problems on <a href='https://www.codewars.com' > Codewars</a> (you can find my account <a href='https://www.codewars.com/users/pseudoincorrect' > here</a>). It gaves me the confidence I needed to takle more challenging problems, or projects outside of the realm of embedded systems. I don't spend that much time on this topic these days as I favorise working directly on projects. However that period contributed a lot in the development of my software skills. <br> <br> ",
    "details": "<p> Topic Studied and Ressources</p> <ul> <li> Many programming challenges/problems solved on Codewars</li> <li> Python design patterns</li> <li> Full stack applications design</li> <li> Algorithms design and usage</li> <li> SQL and NoSQL databases</li>  <li> Cloud computing with AWS</li> </ul> ",
    "detailsPictures": [
      {
        "path": "/images/projects/algorithms/codewars.jpg",
        "alt": "Path finding Algorith codewars"
      }
    ],
    "tags": "Algorithm, Comptetive Coding, Codewars",
    "location": "HBKU, Doha, Qatar",
    "date": "2018 - Now"
  },
  {
    "title": "Web Thread Watch",
    "mainPictures": [
      {
        "path": "/images/projects/mesh/wristwatch.jpg",
        "alt": "3D Printed Wristwatch with PCB"
      },
      {
        "path": "/images/projects/mesh/gui2.png",
        "alt": "Angular Frontend Graphs"
      },
      {
        "path": "/images/projects/mesh/architecture.png",
        "alt": "System architecture"
      }
    ],
    "shortSummary": "Fullstack IoT system to collect data of wristwatches in a thread mesh network. MEAN stack and home protocol for data accumulation and sending.",
    "summary": "<p> We designed a <b> Wristwatch</b> made to worn by <b> hundreds of persons</b> (typicaly outdoor workers). It <b> record the heart rate</b> , oxymetry, temperature of the bearer. It is connected to a low power network (Thread standard, similar to zigbee) around the work area. Data are sent&nbsp; to a <b> gateway</b> (single board computer) itself on the work are,<b> that has an internet</b> connection. The gateway sent them to a<b> full-stack application</b> host on the cloud (AWS). Finally the users can see their health status on a website (<b> frontend</b> ) and receive notification in case of alarming states.</p> <p> Key points:</p> <ul> <li> Full-stack Application (<a title='mean' target='_blank' href='http://meanjs.org/'> MEAN</a> stack)</li> <li> Embedded System Programming (<a target='_blank' href='https://www.nordicsemi.com/Products/Low-power-short-range-wireless/nRF52840'> Nordic</a> )</li> <li> Electronic Design with <a target='_blank' href='https://www.autodesk.com/products/eagle/overview'> Eagle</a> (wristwatch with sensors)</li> <li> wireless communications (<a title='Thread Protocol' target='_blank' href='https://www.threadgroup.org/news-events/press-releases/ID/20/Introducing-Thread-A-New-Wireless-Networking-Protocol-for-the-Home'> Thread</a> protocol)</li> </ul> <p> Project on <a href='https://github.com/pseudoincorrect/Health_overview'> Github</a> </p> ",
    "details": "<em> <b> Now, for the practical part: </b> </em> <p> We have developped a custom wrist-mounted device, RF enabled, that integrates into a low-power Mesh network ( <b> OpenThread </b> ). All Bio data are sent to our server hosting a <b> full stack application </b> (backend/database and front end). This <b> system is easily scalable </b> so hundreds of companies can monitor the health status of hundreds of their employees.&nbsp;</p> <em> <br /> <b> Overall Behavior and Hierarchy of the system:</b> <b> &nbsp;&nbsp;</b> </em> <p> <b> Each person is wearing a custom smart wristwatch </b> that contains essentially two <b> temperature sensors </b> (on for the skin and one for the ambient temperature, one <b> hear rate / oximetry sensor </b> (oxygen level), and one <b> dehydration sensor </b> (that is still under development with our research team). Each of these devices is transmitting and listening data from the RF low-power network they are authenticated to, at regular intervals. The network is created by a set of routers that relay the sensor data to a gateway, which is a router connected to a board computer with an internet access. This <b> RF mesh network protocol </b> is the <b> OpenThread </b> implementation, for low-power, (relatively) high bandwidth and latency, and robustness. This Gateway, send data to our <b> backend application, hosted online </b> , with a by <b> directional communication </b> . That way, our server online can received and send data to each node. Finally we designed a frontend application (website) that can display all of these data and control the overall behavior of the system. Moreover, this system integrate user authentication, meaning that we can easily scale this system up, so that many different company can have their own sets of wristwatch/routers/gateway and access their data online, securely, as we are using the latest security technologies, both for the online server, the mesh network and the hardware.&nbsp;</p> <em> <br /> <b> The breakdown of the project's components (and codes):&nbsp; </b> </em> <ul> <li> <b> Wrist-mounted device </b> (wristwatch), containing sensors and wireless chip for the mesh network communication, battery powered, with a firmware written in C. This system is custom made by our team, which concerns both the Printed Circuit Board (PCB) and the wristwatch bracelet (3D printed with hard and soft materials).&nbsp;</li> <li> <b> Mesh Router device </b> (plugged to a wall socket) containing a wireless chip with a power amplifier (firmware written in C as well). This system is also custom made (PCB, and 3D printed case).&nbsp;</li> <li> <b> Mesh Gateway device </b> with the same component as the Router above; it role is entirely different as It is the interface between our mesh network and the single board computer, with which they communicate via a serial connection (C programming).&nbsp;</li> <li> <b> Gateway device </b> , which is a single board computer running a NodeJS daemon program, which make the link between our full-stack application and the Mesh network (JavaScript).&nbsp;</li> <li> <b> Backend server application </b> , Which consists into a REST API coupled with a Database. We used NodeJS with Express and MongoDB. This application was written in JavaScript.&nbsp;</li> <li> <b> Frontend Application </b> (hosted by the backend server) that uses the Angular framework (Typescript/ JavaScript).&nbsp; <br /> The 6 above parts are 6 independents programs and physical devices (except for the frontend application and backend server that are run on online servers).&nbsp;</li> </ul> ",
    "detailsPictures": [
      {
        "path": "/images/projects/mesh/gui1.png",
        "alt": "Angular GUI summary"
      },
      { "path": "/images/projects/mesh/gui3.png", "alt": "Angular GUI Graph" },
      {
        "path": "/images/projects/mesh/boards.jpg",
        "alt": "Debug and Production Boards PCB"
      },
      {
        "path": "/images/projects/mesh/pcb.png",
        "alt": "Eagle PCB preview Production"
      },
      {
        "path": "/images/projects/mesh/pcb_dev.png",
        "alt": "Eagle PCB preview Debug"
      }
    ],
    "tags": "Open Thread Mesh, Full-Stack Application, C programming, JavaScript, PCB design, Deployment",
    "location": "HBKU, Doha, Qatar",
    "date": "2018"
  },
  {
    "title": "Wearable with GUI",
    "mainPictures": [
      {
        "path": "/images/projects/bluetoothHealth/pcb_hand.jpg",
        "alt": "PCB of the wearable"
      },
      {
        "path": "/images/projects/bluetoothHealth/gui.jpg",
        "alt": "GUI made with pyQt"
      },
      {
        "path": "/images/projects/bluetoothHealth/pcb_gui.jpg",
        "alt": "PCB and GUI with pyQt"
      }
    ],
    "shortSummary": "Chest worn system to gather sensor data before displaying it on a desktop application made with pyQt on linux. Bidirectional connection. ",
    "summary": "<p> We developed a <b> wearable system</b> , composed of a chest band wrap and <b> custom electronic boards</b> to record the temperature, humidity and send notifications with LEDs and a vibrating motor. This system is connected to a central computer thanks to the <b> Bluetooth Mesh protocol</b> to increase the range. All vital status are displayed on a custom <b> GUI written with pyQt</b> in Python.</p> <p> Key points:</p> <ul> <li> Hardware design with <a target='_blank' href='https://www.autodesk.com/products/eagle/overview'> Eagle</a> (Cadsoft)</li> <li> <a target='_blank' href='https://www.bluetooth.com/blog/introducing-bluetooth-mesh-networking/'> Bluetooth Mesh</a> communication</li> <li> GUI application with <a target='_blank' href='https://pypi.org/project/PyQt5/'> pyQt in Python</a> </li> </ul> <p> Project on <a href=\"https://github.com/pseudoincorrect/Dehydration\"> Github</a> </p> ",
    "details": "The aim of this project is to create a system that could be worn by each of the workers and transmit its sensor data to a base station located in the room.<p> We therefore used the Bluetooth 4.2 (BLE) protocol in a star topology with a base station being a computer for display and storage.</p> <p> The embedded system consisted into a Nordic Semiconductor wireless MCU along power supply/management, vibration motor, LED and a FFC connector to connect multiple sensors. The base station connected to the PC was containing the same Nordic Semi chip along with a UART/USB interfacing chip. The data were then displayed on the PC. By the architecture of our system, we could connect as many node to the base station as the Bluetooth bandwidth would allow, which represents hundreds of nodes, as each node only transmit few times per minutes (which is selectable). The system is bidirectional, meaning that the Base station could send notifications/warning to the embedded system and vice versa. We designed the<b> PCB with Eagle (Cadsoft)</b> and made it manufactured in China, soldered in Qatar by ourselves. The code was made in C with Segger Embedded Studio. The <b> Graphical application</b> was written in <b> Python with PyQt for a quick prototyping</b> .</p> ",
    "detailsPictures": [
      {
        "path": "/images/projects/bluetoothHealth/pcb.jpg",
        "alt": "Embedded system assembled"
      },
      {
        "path": "/images/projects/bluetoothHealth/wearable.jpg",
        "alt": "PCB and jacket"
      },
      { "path": "/images/projects/bluetoothHealth/cad.png", "alt": "PCB files" }
    ],
    "tags": "C programming, Python GUI, multithreading, smart clothes, PCB design, Bluetooth",
    "location": "HBKU, Doha, Qatar",
    "date": "2017"
  },
  {
    "title": "Electronic Laboratory",
    "mainPictures": [
      {
        "path": "/images/projects/lab/lab1.jpg",
        "alt": "Computer Sciences Lab vue 1"
      },
      {
        "path": "/images/projects/lab/lab2.jpg",
        "alt": "Educational part of the lab"
      }
    ],
    "shortSummary": "Set up of an electronic/computer sciences lab for CSE college of HBKU. Servers management, electronic equipment selection and budgeting.",
    "summary": "<p> A part of my position as IoT engineer and Laboratory Manager was to set-up and is to take care of the laboratory of our (Computing Sciences) division. The current laboratory include 29 workstations. The principle manipulations and workstation themes are the following ones:</p> <p> Key points</p> <ul> <li> Soldering, Reworking and reflowing</li> <li> PCB manufacturing with a laser CNC</li> <li> Inkjet printing for smart wearables (conductive ink printing on diverse fabrics)</li> <li> signal characterization (Oscilloscope, LRC, Source meter, RF analyzer, function generator, Logic analyzer, &hellip;)</li> <li> General purpose/teaching electronic workstations</li> <li> Visible light communication manipulation</li> <li> Software Defined Network manipulation</li> <li> Engineering lab part with mechanical tools</li> <li> CNC and 3D printers</li> <li> ...</li> </ul> ",
    "details": "<p> Regarding most of these workstations, manipulations and consumables we <b> designed all the technical specifications</b> in term of our projects needs but also in terms of <b> safety</b> , <b> storage</b> and <b> maintenance</b> . This helped me significantly to develop my <b> organization skills, my human contact with the different actor involved in laboratory management</b> and my knowledge about the state of the market for the electronic machinery and consumables. In term of my work schedule and achievement, The set-up of the lab was time consuming only for <b> 6 months during the design and set-up of the lab</b> in collaboration with our Facility management team, the safety team and our procurement team that leveraged the administrative work, leaving us only the <b> essential technical work to do</b> . For the two and half following years, I only assisted on critical issues and seldom set-up of new machinery.</p> ",
    "detailsPictures": [
      { "path": "/images/projects/lab/lab2.jpg", "alt": "" },
      { "path": "/images/projects/lab/lab1.jpg", "alt": "" }
    ],
    "tags": "Laboratory, Management, Electronic, Safety",
    "location": "HBKU, Doha, Qatar",
    "date": "2016 to now"
  },
  {
    "title": "7 Various Projects",
    "mainPictures": [
      {
        "path": "/images/projects/ledPump/line_digital.jpg",
        "alt": "Line following robot"
      },
      {
        "path": "/images/projects/ledPump/pump.jpg",
        "alt": "Pump motor control"
      }
    ],
    "shortSummary": "Development or Contribution to 7 projects revolving around web technologies and electronic with HBKU researchers and students.",
    "summary": "During my career of IoT engineer at HBKU, I participated to various projects. Thereafter is a <b> highlight of the projects that I worked on</b> , with a major or total contribution.&nbsp;<br> <br> <ul> <li> Python Web Crawler</li> <li> Controlled LED panel</li> <li> Automated pumping system</li> <li> Line following robot with TTL logic</li> <li> Line following robot with Arm Microcontroller</li> <li> Bluetooth BLE connection for remote sensors</li> <li> Smart composter design only</li> </ul> ",
    "details": "Python Web Crawler<p> For this project, I designed a web crawler used to collect the data of our ERP system, sort them and gather them into a spreadsheet. This program was mainly using Selenium, a browser controller library used to automate test but not only. The goal was to automate a repetitive task that slowed down our division work in term of material resources management.&nbsp;</p> Controlled LED panel<p> In the context of sustainable energy development. A Research set up a protocol to analyze the different reaction of bacterial solution exposed to light with multiple wavelength. For this reason, we designed a rectangular paned including LEDs, controller, and microcontroller and power supply</p> Automated pumping system<p> One of our college experimentation implied that solution rich in nitrate was injected at regular intervals into a larger bacterial solution. To do so, we (rapidly) developed a systems controlling our pump and displaying the necessary information on a screen.</p> Line following robot with TTL logic<p> In order to introduce our undergrads students to Digital Systems and Electronic, we build a set&nbsp; of lab around a line following robot. In my particular case, I designed the robot out of TTL logic components and light emitter/receiver sensor (Led and photodiode).</p> Line following robot with Arm Microcontroller<p> Although this project looks like the one above, I set up a race competition for high school student during our University holiday to introduce them happily to Computer Sciences. Thus I built with them around 15 line following robot, this time controlled by a Microcontroller (MCU) in order to simplify the implementation (and keep them interested). For this we used 3 different MCU technologies: STM32, and Arduino.</p> Bluetooth BLE connection for remote sensors and python logger<p> For this project a student wanted help on how to link sensors to a computer wirelessly and without much complexity. Therefore we headed to an Arduino + serial Bluetooth connection with a simple python script to log data on a computer.</p> Smart composter design<p> The goal of this project was to design a &ldquo;smart composter&rdquo; that would be used to monitor the degradation of alimentary product. It consisted mainly into linking sensor to a data logger, and to control the composter in term of temperature, humidity (by injecting water) and rotating a helix to move the processed food inside the composter, the student is currently implementing our solution.</p> ",
    "detailsPictures": [
      {
        "path": "/images/projects/ledPump/line_mcu.jpg",
        "alt": "Line following robot prototype"
      },
      {
        "path": "/images/projects/ledPump/se.png",
        "alt": "Selenium web crawler"
      }
    ],
    "tags": "Rapid Prototyping, Python, TTL logic, Bluetooth, C programming",
    "location": "HBKU, Doha, Qatar",
    "date": "2016 to now"
  },
  {
    "title": "Labs for Computer Arch.",
    "mainPictures": [
      { "path": "/images/projects/pocsd/de2.jpg", "alt": "FPGA Board" },
      { "path": "/images/projects/pocsd/verilog.jpg", "alt": "Verilog logo" },
      {
        "path": "/images/projects/pocsd/chronogram.png",
        "alt": "Simulink chronographs"
      }
    ],
    "shortSummary": "Design and teaching of Computer Architecture labs for MS. and PhD students. Deep dive in Electronic device design such as CPU.",
    "summary": "<p> I <b> wrote and taught</b> a set of 5 laboratories exercises for <b> graduate and PhD students</b> of HBKU university. These labs were approaching a various set of subjects regarding <b> Digital System Design and computer architecture</b> , such as combinational and sequential logic, finite state machines, pipelining and optimization. This is where I realized that having all the necessary knowledge does not imply that the teaching will be successful. My first semester teaching <b> this class taught me more than a decade of student and active life</b> in regard to communication.</p> <p> Key points:</p> <ul> <li> <a target='_blank' href='https://en.wikipedia.org/wiki/Verilog'> Verilog</a> Design</li> <li> <a target='_blank' href='https://en.wikipedia.org/wiki/Computer_architecture'> Computer Architecture</a> </li> <li> Algorithm Hardware <a target='_blank' href='https://www.achronix.com/blog/when-why-and-how-should-you-use-embedded-fpga-technology-for-hardware-acceleration/'> Acceleration</a> </li> <li> Teaching</li> </ul> ",
    "details": "<p> Here is the truth: the <b> first year was not a success with this class</b> . Even though I was <b> perfectly skilled on the technical plan</b> , my teaching method was to be revised. So for the coming year I spent countless of hours training my communication and teaching skills, how to approach people and motivate them to learn; with <b> books, online classes and lots of practice</b> . <b> The results for the next class, were above my expectations</b> . Students were extremely motivated and stayed late after to continue learning. Overall, this teaching experience was a success and taught me much more than technical skills.</p> ",
    "detailsPictures": [
      {
        "path": "/images/projects/pocsd/architecture.png",
        "alt": "Von Neumann Architecture"
      },
      {
        "path": "/images/projects/pocsd/arm.jpg",
        "alt": "Digital system design book"
      },
      {
        "path": "/images/projects/pocsd/microelectronics.jpg",
        "alt": "Microelectronics book"
      }
    ],
    "tags": "FPGA, Verliog, Block Diagrams, Teaching, Digital Design, Computer Architecture",
    "location": "HBKU, Doha, Qatar",
    "date": "2016 to now"
  },
  {
    "title": "FPGA Wifi Link",
    "mainPictures": [
      {
        "path": "/images/projects/fpgaWifi/fpgaWifi.jpg",
        "alt": "FPGA and Wifi module prototype"
      },
      {
        "path": "/images/projects/fpgaWifi/websocket.png",
        "alt": "Websocket programming"
      }
    ],
    "shortSummary": "Design of a connection between a FPGA and web application through wifi and websockets. Optimisation of the packet transmission and buffering.",
    "summary": "<p> Transmission of <b> FPGA sensor data online reliably at a high rate through a wifi connections</b> . A&nbsp;FPGA with sensors is connected&nbsp;to a server with an TCP connection through wifi. We achieved a bandwidth of 8 Mb/sec with the help of SRAM bufferization. For this project, we used development board from Altera (now Intel) and Texas Instrument. The wireless microcontroller firmware and FPGA configuration were written in C and Verilog.</p> <p> key points:</p> <ul> <li> <a target='_blank' href='https://www.terasic.com.tw/cgi-bin/page/archive.pl?Language=English&amp;No=502'> FPGA</a> architecture in Verilog</li> <li> <a target='_blank' href='http://www.ti.com/product/CC3200'> Wifi microcontroller</a> firmware in C</li> <li> <a target='_blank' href='https://www.geeksforgeeks.org/socket-programming-cc/'> Socket programing</a> in C</li> <li> Linux Bash scripting</li> </ul> <p> Project on <a href=\"https://github.com/pseudoincorrect/FPGA_MCU_wifi\"> Github</a> </p> ",
    "details": "<p> This application allows for transmitting data from a FPGA to a PC or any <b> TCP/IP capable device through WiFi</b> via a wireless enabled MCU (CC3200 from TI), at a rate up to<b> 8 Mbits/sec</b> .</p> <p> A FPGA receive data from several sensors, store them in memory and transmit them to a Microcontroller (MCU) through a <b> SPI connection custom (written in verilog)</b> .</p> <p> The MCU first connect itself to an access point (WiFi) and then to a receiving server (in our case a <b> python program we wrote</b> ).</p> <p> Afterward, the MCU starts accepting the SPI data sent from the FPGA and store them in a Buffer. Once the buffer is full enough, the MCU send data to a computer through the TCP/IP protocol.</p> <p> Meanwhile, it still receives data from the SPI.</p> <p> These parallel processes (SPI reception, TCP transmission) repeat endlessly as long as the (socket) connection between the MCU and the PC stays alive.</p> <p> The key point of this project was to create a reliable connection between the FPGA and the MCU as the <b> MCU often drop the connection with the remote server</b> . Therefore the <b> FPGA needed to wait the connection to recover and store the data into a SRAM chip placed on its board.</b> </p> <p> Once the project finalized, sources along with a comprehensive user manual were sent to the research team in need for this particular use case.</p> ",
    "detailsPictures": [
      {
        "path": "/images/projects/fpgaWifi/diagram.png",
        "alt": "Architecture of the system"
      },
      {
        "path": "/images/projects/fpgaWifi/fpgaWifi.jpg",
        "alt": "Board Debugging"
      }
    ],
    "tags": "FPGA, Verilog, WiFi, C programming, Socket Programming, TCP",
    "location": "HBKU, Doha, Qatar",
    "date": "2016"
  },
  {
    "title": "Computing Accelerators",
    "mainPictures": [
      {
        "path": "/images/projects/fractal/mandelbrot.png",
        "alt": "Mandelbrot Fractal"
      },
      {
        "path": "/images/projects/fractal/chip_archi.jpg",
        "alt": "Digital system design projects"
      }
    ],
    "shortSummary": "Several small projects on Hardware acceleration of computation with FPGAs. Aliance of Mathematics and parallel processing.",
    "summary": "<p> The purpose of these projects were purely <b> educational for the need of my current position</b> . I needed to <b> create a set of laboratories</b> (practical exercises) and teach Digital System Design and Computer Architecture. <b> To reach a level I judged satisfying</b> I set myself several goals, took few advanced classes on the subject (Cornell ECE5760).&nbsp;</p> <p> Subjects taken:</p> <ul> <li> A <a target='_blank' href='https://en.wikipedia.org/wiki/Cellular_automaton'> Cellular Automaton</a> display</li> <li> Hardware <a target='_blank' href='https://en.wikipedia.org/wiki/Ordinary_differential_equation'> ODE</a> (Ordinary Differential Equation) solver</li> <li> A Sound Generator based on <a target='_blank' href='https://en.wikipedia.org/wiki/Partial_differential_equation'> Multiprocessor PDE</a> real-time synthesis of a nonlinear drum&nbsp;</li> <li> A <a target='_blank' href='https://en.wikipedia.org/wiki/Mandelbrot_set'> Mandelbrot set</a> solver</li> </ul> <p> Project on <a href=\"https://github.com/pseudoincorrect/Verilog_Labs\"> Github</a> </p> ",
    "details": "In most of the case these projects followed these steps:<ul> <li> Study of the mathematical and physical problem on which they were based. For instance with the Sound Generator, we needed to understand how to create a mesh of hardware nodes (Finite Element Computation) communicating together and implement the PDE solver</li> <li> Making a higher level architecture, involving Multiple Architecture Diagrams</li> <li> Making a first implementation with Verilog</li> <li> Simulating this implementation on a RTL Simulator, in our case ModelSim</li> <li> Optimize the hardware in term of speed and Size</li> <li> Implement and test it on the DE2-115 FPGA board</li> </ul> <p> <b> Code available on:&nbsp;<a href=\"https://github.com/pseudoincorrect/Verilog_Labs_Corn\"> Github</a> &nbsp;</b> </p> <p> Overall these classes, brought me so much knowledge of Computer Architecture, Digital Design and Hardware acceleration,<b> I cannot say thank you enough to Bruce Land, Senior Lecturer in Cornell University to make these resources available online.</b> </p> ",
    "detailsPictures": [
      { "path": "/images/projects/fractal/automaton.png", "alt": "Automaton" },
      { "path": "/images/projects/fractal/mesh.png", "alt": "Mesh computing" },
      {
        "path": "/images/projects/fractal/ddf.png",
        "alt": "Differential Equation"
      }
    ],
    "tags": "FPGA, Hardware Acceleration, Highly Parallelized Systems, Computer Architecture",
    "location": "HBKU, Doha, Qatar",
    "date": "2016"
  },
  {
    "title": "NerD",
    "mainPictures": [
      { "path": "/images/projects/nerd/rat.png", "alt": "Rat with implant" },
      { "path": "/images/projects/nerd/pcb.png", "alt": "Nerd PCB" },
      {
        "path": "/images/projects/nerd/pcb2.jpg",
        "alt": "Nerd PCB wireless communication"
      }
    ],
    "shortSummary": "Design of a low cost implant for rat for signal transmission of their neurons signal with custom data compression algorithm. Paper published.",
    "summary": "<p> Design of a&nbsp;<b> low-cost and open source system, needed to acquire brain activity of freely moving rodents</b> . We created a<b> 3 stages PCB</b> containing an <b> acquisition/filtering</b> chip, a <b> wireless transceiver</b> and a processor for application and <b> data compression</b> in order to sustain a high speed connection (<b> 1,2 Mbit/sec</b> ) while keeping an <b> battery life of 5 hours</b> for long experiments. The system was wirelessly linked to a compute through a custom base station and data were displayed/stored thanks to an <b> opensource software</b> .</p> <p> Key points:</p> <ul> <li> <a target='_blank' href='https://iopscience.iop.org/article/10.1088/1741-2552/aaa041'> Research Article published</a> </li> <li> Neural brain implant for rodent&nbsp;</li> <li> 3 stages PCB (acquisition, processing, RF transmission)</li> <li> Firware writting in C (for <a target='_blank' href='https://www.st.com/en/microcontrollers-microprocessors/stm32f0-series.html'> STM32</a> )</li> <li> GUI application</li> <li> <a target='_blank' href='https://www.nordicsemi.com/Products/Low-power-short-range-wireless/nRF24-series'> Custom wireless protocol</a> (2,4 GHz)</li> </ul> <p> Project on</b> <b> <a href=\"https://github.com/pseudoincorrect\"> Github</a></b> </p> <p> <b> Published journal paper available on <a href=\"http://iopscience.iop.org/article/10.1088/1741-2552/aaa041\"> Journal of Neural Engineering</a> &nbsp;</b> </p> ",
    "details": "Strategy<ul> <li> Design of a wireless system for recording the neural activity of a freely moving rat</li> <li> Design and implementation of compression algorithm, ADCPM, for the optimization of the bandwidth usage among the wireless neural signal acquisition systems</li> </ul> Management<ul> <li> Design and management of a workspace for the development of microelectronics systems</li> <li> Selection of the tools and components for the development of based-microcontroller systems</li> <li> Evaluation of the project costs, within the context of open source development, fast reproducible systems</li> <li> The purpose is to offer a non-expensive replacement of industrial existing systems</li> </ul> Implementation<p> The initial part of the project was to select the appropriate Microcontroller and wireless transceiver that would reach our specifications. Thus we tests multiple wireless systems: Bluetooth, WIFI, ZigBee, analog RF, Nordic Custom; and microcontroller: Arduino, Mbed, STMicroelectronics, TI. We select the Nordic nrf24L01+ for the wireless part and a STM32F0 for the computing/peripheral unit. We then created our first proto-board, then the PCB. The following was to debug both the hardware of our 3 stages board and its firmware. After a long series of test regarding the bandwidth, transmission loss and battery life, we were ready to test it on living rodents. Once the real data were acquired, we worked on the journal article writing to finally end the project.</p> ",
    "detailsPictures": [
      {
        "path": "/images/projects/nerd/system.png",
        "alt": "System architecture"
      },
      {
        "path": "/images/projects/nerd/rat.png",
        "alt": "Rat with nerd implant"
      }
    ],
    "tags": "OpenSource, Custom Wireless, STM32, nrf24, PCB, C programming",
    "location": "Loria research institute, Nancy, France",
    "date": "2015"
  },
  {
    "title": "Wireless Sensor",
    "mainPictures": [
      { "path": "/images/projects/moth/pcb.jpg", "alt": "Wireless PCB" },
      { "path": "/images/projects/moth/moth.jpg", "alt": "Moth" }
    ],
    "shortSummary": "Preliminary study and design of a transmission system for Moths (~butterflies) muscles signals for data processing and analysis.",
    "summary": "<p> <b> Implementation of wireless communication system</b> for the study of&nbsp;flight learning process of animal such as moths. For this purpose we needed to characterizing &nbsp;the <b> electrophysiological signals in animals muscles</b> and their response to stimulations such as the detection of a pheromone (smelling). Study of the process of learning, to further enrich the neural network based algorithms in computer science (mainly used in <b> Artificial Intelligence</b> ).&nbsp;</p> <p> Key points:</p> <ul> <li> Bluetooth transmission system</li> <li> GUI with <a target='_blank' href='https://www.qt.io/'> Qt</a> in C++</li> <li> firmware written in C (<a target='_blank' href='https://www.st.com/en/microcontrollers-microprocessors/stm32f0-series.html'> STM32</a> )</li> <li> Litterature review of electrophysiological acquisition systems</li> </ul> ",
    "details": "In order to complete this project, the following objectives were to be reached<p> &nbsp;</p> <p> <b> Design of an autonomous embedded system destined to be placed on a moving robot</b> </p> <ul> <li> The <b> system</b> was to be <b> light</b> enough to be transported by a cable robot and resist to b acceleration. Therefore we reduced the mass of the Printed Circuit Board and used ultra-thin silver wires to connect the system to the animal (moth)</li> </ul> <p> <b> Acquisition of moth neuromuscular signals to be sent to a computer via Bluetooth</b> </p> <ul> <li> The system needed to <b> send the electrophysiological data to a distant computer</b> . Within our configuration, the use of cable was impossible due to the high speed of the cable robot for which the system was mean to be placed on. We selected <b> Bluetooth</b> technology for it reliability, speed matching our requirement, and ease of use. The microcontroller used were from STmicroelectronic and its<b> firmware was written in C</b> .</li> </ul> <p> <b> Design of a graphical application</b> </p> <ul> <li> Finally we needed to acquire and display the said data on a computer placed across the room as well as sending it data. Thus, we designed a <b> Qt based graphical application in C++ for this purpose</b> .</li> </ul> ",
    "detailsPictures": [
      {
        "path": "/images/projects/moth/prototype.jpg",
        "alt": "System prototype"
      },
      { "path": "/images/projects/moth/pcb.jpg", "alt": "PCB" }
    ],
    "tags": "Mbed, Bluetooth, C/C++ programming, prototyping, GUI design",
    "location": "HBKU, Doha, Qatar",
    "date": "2014"
  },
  {
    "title": "Heart Rate Sensor",
    "mainPictures": [
      {
        "path": "/images/projects/heartRate/boardOnly.png",
        "alt": "Board debugging"
      },
      {
        "path": "/images/projects/heartRate/boardOscillo.png",
        "alt": "Board Testing"
      }
    ],
    "shortSummary": "Design of a heart rate sensor/logger with a custom PCB. Ultra-low power system to maximise battery life with efficient programming of a microcontroller. ",
    "summary": "<p> Design and implementation of&nbsp;<b> custom hardware and firmware for a Heart Rate data logger</b> . This was a complete introduction to Printed Circuit Board (PCB) design, soldering, and firmware writing. This is also the project that made me love embedded systems.</p> <p> Key points:</p> <ul> <li> PCB design with <a target='_blank' href='https://www.autodesk.com/products/eagle/free-download'> Eagle</a> </li> <li> Firmware written in C (<a target='_blank' href='https://www.nxp.com/design/development-boards/lpcxpresso-boards:LPCXPRESSO-BOARDS'> NPX microcontroller</a> )</li> <li> SMD Soldering and testing</li> </ul> ",
    "details": "<p> The first challenge was to setup the goals upon what the system would do. Being used to the simplicity of Arduino, we sometimes set unattainable goals regarding embedded system, especially when looking outside of the arduino realm. In here, by the nature of our this project development tools (set by the professor), we were forced to <b> make a comprehensive analysis of what can be done within a certain time period</b> . Therefore the idea of heartbeat data logger came into our mind.</p> <p> We firstly created a prototype thanks to several development boards. Then we wrote the <b> firmware</b> . After this, we designed our <b> custom PCB</b> and adapted the firmware. We then made the board manufactured and attempted a first soldering. After quite some hardware and software debugging, the system came to life and with it the end of this project. <b> The satisfaction to create a system from scratch was almost overwhelming. This is at this moment that I knew I found my path.</b> </p> <p> &nbsp;</p> ",
    "detailsPictures": [
      {
        "path": "/images/projects/heartRate/boardProgrammer.png",
        "alt": "Board testing"
      },
      {
        "path": "/images/projects/heartRate/boardOnly.png",
        "alt": "Board debugging"
      },
      { "path": "/images/projects/heartRate/boardOscillo.png", "alt": "NXP" }
    ],
    "tags": "NXP, sensor, UART, Custom PCB, C programming",
    "location": "Lulea University of Technology, Lulea, Sweden ",
    "date": "2013"
  },
  {
    "title": "Logarithmic Gears",
    "mainPictures": [
      {
        "path": "/images/projects/varistart/system.png",
        "alt": "Varistart system"
      },
      { "path": "/images/projects/varistart/gear.png", "alt": "Varistart Gear" }
    ],
    "shortSummary": "Design and implementation of testbench for a set of algorithmic gears to provide an improved start time of motor compared to regular gears.",
    "summary": "<p> Design and implementation of a <b> testbench for a set of algorithmic gears</b> . This was an industrial project within my school ESSTIN. We design a testing platform to measure the speed, torque and efficiency of the system. It was a combination of mechanical <b> design</b> , dynamic mechanical <b> analisis</b> , <b> electronic implementation</b> .&nbsp;</p> <p> Key points:</p> <ul> <li> CAD design with Catia</li> <li> Dynamical mechanical analisis</li> <li> Electronic acquisition system&nbsp;</li> </ul> ",
    "details": "<p> The purpose of this project was to design a bench test for the Varistart system.</p> <p> These strange gearing shapes may strike a question: <b> How do they even rotate without breaking and what do we do with them</b> ?</p> <p> Without going too far in mechanical analytic, we can say that when the<b> system start</b> , the overall torque in enormous with a <b> small speed</b> (hence easy to rotate) and at the <b> end of the revolution</b> of the blue gearing (above), the torque reduces dramatically and provides a<b> large speed</b> (hence fast after the start). This ingeniously named system &ldquo;<b> Varistart</b> &rdquo; indicate that the torque vary at the start of the system.</p> <p> <b> We divided this project in 3 parts:</b> </p> <p> <b> CAD design of the gears and the bench in which these sat</b> </p> <ul> <li> We proceeded to design these gearing on Catia CAD and run mechanical simulation and mechanical resistance study in order to obtain a product able to pass our specifications.&nbsp;</li> </ul> <p> <b> Design of the electronic system used for data acquisition</b> </p> <ul> <li> We designed a Electronic system needed to acquire the position/speed/acceleration and torque of the system in order to classify its performances. For this design we used Arduino, which was my introduction to embedded systems</li> </ul> <p> <b> &nbsp;Implementation/manufacture of the whole system</b> </p> <ul> <li> We used the heavy duty manufacturing machines available in our school to implement the system and test it</li> </ul> <p> <b> Results</b> : We did a complete mechanical study of the performance of Varistart which were later used to design several prototypes by the IP owner of this system.</p> ",
    "detailsPictures": [
      {
        "path": "/images/projects/varistart/gear.png",
        "alt": "Varistart Gear"
      },
      {
        "path": "/images/projects/varistart/system.png",
        "alt": "Varistart Assembly"
      }
    ],
    "tags": "Catia, Arduino, Analytical Mechanics, Machining",
    "location": "ESSTIN, Nancy, France",
    "date": "2012"
  },
  {
    "title": "Workflow Improvements",
    "mainPictures": [
      {
        "path": "/images/projects/flowAnalysis/heavyDuty.png",
        "alt": "Heavy duty machine"
      },
      {
        "path": "/images/projects/flowAnalysis/autoCad.png",
        "alt": "Autocad design"
      }
    ],
    "shortSummary": "Improvement of the manufacturing line of a factory workstation with workflow analysis on a window making factory in France.",
    "summary": "<p> <b> Improvement of the manufacturing line of a factory workstation </b>. For 6 months, we conducted a medium term study and refactoring of the workflow for this particular workstation involving several <b> heavy duty machines and 3 operators</b> . This industrial project was a partnership between ESSTIN and Les Zelles (in France).</p> <p> Key points:</p> <ul> <li> Flow analisis of industrial process</li> <li> 2D CAD design with Catia</li> </ul> ",
    "details": "<p> <b> We divided this project into 3 parts:</b> </p> <p> <b> Preliminary study and data acquisition</b> </p> <ul> <li> We first became familiar with the company, its employees and the equipment before proceeding to the data acquisition. Secondly we proceed to take physical measurement of the production chains and reported digital with AutoCAD. Then we took time measurement of the various production steps and dead times.</li> </ul> <p> <b> Data Analysis and refactoring proposal</b> </p> <ul> <li> The second step was to analyze the data we acquired and proceed to plan different modifications of the workspace. This involved product Flow analysis, financial analysis on the cost of the modification and its benefices. We then proposed our solution to Les Zelles.</li> </ul> <p> <b> Implementation</b> </p> <ul> <li> Finally we proceed to the implementation of our accepted solution with the company and reported our work to both Les Zelles and our School.</li> </ul> <p> <b> Result:&nbsp;</b> We improved the production rate by 31% (averaging the different productions with small and large series) &nbsp;by refactoring the workstation, involving a gain ~2000 euros per month for the company.</p> ",
    "detailsPictures": [
      {
        "path": "/images/projects/flowAnalysis/autoCad.png",
        "alt": "Autocad design"
      },
      {
        "path": "/images/projects/flowAnalysis/heavyDuty.png",
        "alt": "Heavy duty machine"
      }
    ],
    "tags": "Work Flow Analysis, AutoCAD, Financial analysis",
    "location": "ESSTIN, Nancy, France",
    "date": "2011"
  }
]
